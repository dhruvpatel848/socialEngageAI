"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/services/api.js":
/*!*****************************!*\
  !*** ./src/services/api.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: function() { return /* binding */ authService; },\n/* harmony export */   dashboardService: function() { return /* binding */ dashboardService; },\n/* harmony export */   dataService: function() { return /* binding */ dataService; },\n/* harmony export */   mlService: function() { return /* binding */ mlService; },\n/* harmony export */   predictionService: function() { return /* binding */ predictionService; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nconst API_URL = \"http://localhost:5000\" || 0;\nconst ML_SERVICE_URL = \"http://localhost:8000\" || 0;\n// Create axios instances\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\nconst mlClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: ML_SERVICE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Add request interceptor to include auth token\nconst addAuthToken = (client)=>{\n    client.interceptors.request.use((config)=>{\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n            // Also add x-auth-token header for backend compatibility\n            config.headers[\"x-auth-token\"] = token;\n        }\n        return config;\n    }, (error)=>Promise.reject(error));\n};\naddAuthToken(apiClient);\naddAuthToken(mlClient);\n// Auth services\nconst authService = {\n    login: async (credentials)=>{\n        const response = await apiClient.post(\"/api/auth/login\", credentials);\n        return response.data;\n    },\n    register: async (userData)=>{\n        const response = await apiClient.post(\"/api/auth/register\", userData);\n        return response.data;\n    },\n    getUsers: async ()=>{\n        const response = await apiClient.get(\"/api/admin/users\");\n        return response.data;\n    },\n    deleteUser: async (userId)=>{\n        const response = await apiClient.delete(\"/api/admin/users/\".concat(userId));\n        return response.data;\n    },\n    updateUser: async (userId, userData)=>{\n        const response = await apiClient.put(\"/api/admin/users/\".concat(userId), userData);\n        return response.data;\n    },\n    createUser: async (userData)=>{\n        const response = await apiClient.post(\"/api/admin/users\", userData);\n        return response.data;\n    },\n    logout: ()=>{\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n    },\n    getCurrentUser: async ()=>{\n        // Check if we have a token first\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            throw new Error(\"No authentication token available\");\n        }\n        try {\n            // Try to get user data from API\n            const response = await apiClient.get(\"/api/auth/me\");\n            if (response.data && response.data.success && response.data.data) {\n                // Store the fresh user data\n                const userData = response.data.data;\n                localStorage.setItem(\"user\", JSON.stringify(userData));\n                return userData;\n            } else if (response.data && response.data.data) {\n                // Handle legacy response format\n                const userData = response.data.data;\n                localStorage.setItem(\"user\", JSON.stringify(userData));\n                return userData;\n            } else {\n                throw new Error(\"Invalid response format from /api/auth/me\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching current user:\", error);\n            // Check if we have stored user data as fallback\n            const storedUser = authService.getStoredUser();\n            if (storedUser) {\n                return storedUser;\n            }\n            // No stored user data either\n            throw new Error(\"Could not retrieve user data\");\n        }\n    },\n    getStoredUser: ()=>{\n        try {\n            const user = localStorage.getItem(\"user\");\n            if (user) {\n                return JSON.parse(user);\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error parsing stored user:\", error);\n            return null;\n        }\n    }\n};\n// Prediction services\nconst predictionService = {\n    getPrediction: async (postData)=>{\n        const response = await apiClient.post(\"/api/predict\", postData);\n        return response.data;\n    },\n    getPredictionHistory: async function() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n        const response = await apiClient.get(\"/api/predict/history?page=\".concat(page, \"&limit=\").concat(limit));\n        return response.data;\n    },\n    updateActuals: async (predictionId, actualData)=>{\n        const response = await apiClient.put(\"/api/predict/\".concat(predictionId, \"/actuals\"), actualData);\n        return response.data;\n    },\n    deletePrediction: async (predictionId)=>{\n        const response = await apiClient.delete(\"/api/predict/\".concat(predictionId));\n        return response.data;\n    }\n};\n// Dashboard services\nconst dashboardService = {\n    getStats: async function() {\n        let timeRange = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"30days\";\n        const response = await apiClient.get(\"/api/data/stats?timeRange=\".concat(timeRange));\n        return response.data;\n    },\n    getModelMetrics: async ()=>{\n        const performanceResponse = await apiClient.get(\"/api/metrics/performance\");\n        const featureResponse = await apiClient.get(\"/api/metrics/feature-importance\");\n        const contentResponse = await apiClient.get(\"/api/metrics/content-analysis\");\n        return {\n            performance: performanceResponse.data,\n            featureImportance: featureResponse.data,\n            contentAnalysis: contentResponse.data\n        };\n    }\n};\n// ML service specific endpoints\nconst mlService = {\n    getBestTimeToPost: async (userData)=>{\n        const response = await mlClient.post(\"/api/best-time\", userData);\n        return response.data;\n    },\n    getContentSuggestions: async (postText)=>{\n        const response = await mlClient.post(\"/api/content-suggestions\", {\n            post_text: postText\n        });\n        return response.data;\n    },\n    getHashtagSuggestions: async (postText)=>{\n        const response = await mlClient.post(\"/api/hashtag-suggestions\", {\n            post_text: postText\n        });\n        return response.data;\n    }\n};\n// Data services\nconst dataService = {\n    getPosts: async function() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, filters = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        // Build query params\n        const params = new URLSearchParams({\n            page,\n            limit\n        });\n        // Add filters if they exist\n        if (filters.media_type) params.append(\"media_type\", filters.media_type);\n        if (filters.start_date) params.append(\"start_date\", filters.start_date);\n        if (filters.end_date) params.append(\"end_date\", filters.end_date);\n        const response = await apiClient.get(\"/api/data/posts?\".concat(params.toString()));\n        return response.data;\n    },\n    getPostById: async (postId)=>{\n        const response = await apiClient.get(\"/api/data/posts/\".concat(postId));\n        return response.data;\n    },\n    deletePost: async (postId)=>{\n        const response = await apiClient.delete(\"/api/data/posts/\".concat(postId));\n        return response.data;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    authService,\n    predictionService,\n    dashboardService,\n    mlService,\n    dataService\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/api.js\n"));

/***/ })

});